// <auto-generated />
using System;
using Blog.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240504195406_SeedingCompleted3")]
    partial class SeedingCompleted3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2af1f69-66a7-4d50-95e6-a5b446f7c910"),
                            CategoryId = new Guid("f2e461bb-875d-4d0a-aff7-f8db21f937a1"),
                            Content = "---------------dwa---------------------ddwa---------------------ddwa---------------------ddwa---------------------",
                            CreatedBy = "Test",
                            CreatedDate = new DateTime(2024, 5, 4, 22, 54, 6, 386, DateTimeKind.Local).AddTicks(6618),
                            ImageId = new Guid("3654c9a2-82c0-4e22-9479-7db9069fe409"),
                            IsDeleted = false,
                            Title = "Asp net Deneme makalesi",
                            ViewCount = 15
                        },
                        new
                        {
                            Id = new Guid("2d9c2c36-cf4b-487a-b1a9-4800f5387ca2"),
                            CategoryId = new Guid("a528849a-4d7f-431b-8c06-640bddef8d5a"),
                            Content = "---------------dwa---------------------ddwa---------------------ddwa---------------------ddwa-----",
                            CreatedBy = "Test",
                            CreatedDate = new DateTime(2024, 5, 4, 22, 54, 6, 386, DateTimeKind.Local).AddTicks(6624),
                            ImageId = new Guid("903bd50c-1c68-4fb2-bb32-2b4aa7d9900d"),
                            IsDeleted = false,
                            Title = "Asp net Deneme 212i",
                            ViewCount = 16
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2e461bb-875d-4d0a-aff7-f8db21f937a1"),
                            CreatedBy = "admin test",
                            CreatedDate = new DateTime(2024, 5, 4, 22, 54, 6, 386, DateTimeKind.Local).AddTicks(6806),
                            IsDeleted = false,
                            Name = "aspnet core "
                        },
                        new
                        {
                            Id = new Guid("a528849a-4d7f-431b-8c06-640bddef8d5a"),
                            CreatedBy = "admin test",
                            CreatedDate = new DateTime(2024, 5, 4, 22, 54, 6, 386, DateTimeKind.Local).AddTicks(6823),
                            IsDeleted = false,
                            Name = "aspnet core "
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3654c9a2-82c0-4e22-9479-7db9069fe409"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2024, 5, 4, 22, 54, 6, 386, DateTimeKind.Local).AddTicks(6933),
                            FileName = "dwadaw",
                            FileType = "png",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("903bd50c-1c68-4fb2-bb32-2b4aa7d9900d"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2024, 5, 4, 22, 54, 6, 386, DateTimeKind.Local).AddTicks(6936),
                            FileName = "dwadaw",
                            FileType = "png",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.HasOne("Blog.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
